<!DOCTYPE html PUBLIC
               "-//W3C//DTD XHTML 1.0 Strict//EN"
               "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>chip.php</title>
<meta http-equiv='Page-Enter'
           content='revealTrans(duration="1",transition="20")' />
<link rel="stylesheet" href="chip.css" title="CHIP"
      type="text/css" />
<!--[if IE]>
<link href="chip-ie.css" rel="stylesheet" type="text/css"
      media="screen">
<![endif]-->
<script type="text/javascript" src="rot13.js"></script>
<script type="text/javascript" src="chip.js"></script>
<script type="text/javascript">
// <!--

chipFilePath = 'chip.php';
chipPlainPageAnchorText = '(Load chip.php without formatting)';
chipEmailLabelPrefix = 'chip-rotemailaddress';
chipTopLinkLabel = 'chip-toplink';
chipBottomLinkLabel = 'chip-bottomlink';

  function chipOnload()
  {

    chipFixRotEmails();
    chipFixLinks();
  }

// -->
</script>
</head>
<body onload="javascript:chipOnload()">
<p style="text-align: right"><span id='chip-toplink'>
To load this file without formatting, visit chip.php.  This is a spam-protection
measure; sorry for the inconvenience.
</span>
</p>
<p style="text-align: center">&middot; chip.php &middot;</p>
<pre>
<span class='chip-embedded-1'><span class="l">&nbsp;&nbsp;&nbsp;1</span><span class='chip-normal'>&lt;?php                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>define</span>("<span class='chip-string'>VERSION</span>", "<span class='chip-string'>2.6.2</span>");                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;5</span><span class='chip-comment'>/*                                                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>CHIP: Code Highlighting in PHP.  Version 2.6.2.                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>Copyright (c) 2004-2005 Ewan Mellor &lt;<span id='chip-rotemailaddress0'>puvc at rjnazryybe.bet.hx</span>&gt;.  All rights    
<span class="l">&nbsp;&nbsp;10</span>reserved.                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>This software is covered by the MIT Licence                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>&lt;<span class='chip-url'><a href='http://www.opensource.org/licenses/mit-license.html'>http://www.opensource.org/licenses/mit-license.html</a></span>&gt;:                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;15</span>  Permission is hereby granted, free of charge, to any person obtaining a copy  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  of this software and associated documentation files (the "Software"), to      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  deal in the Software without restriction, including without limitation the    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  sell copies of the Software, and to permit persons to whom the Software is    
<span class="l">&nbsp;&nbsp;20</span>  furnished to do so, subject to the following conditions:                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    The above copyright notice and this permission notice shall be included in  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    all copies or substantial portions of the Software.                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;25</span>    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     
<span class="l">&nbsp;&nbsp;30</span>    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    DEALINGS IN THE SOFTWARE.                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>CHIP is a simple source code highlighter designed to be used on webservers.     
<span class="l">&nbsp;&nbsp;35</span>It takes C, C++, Java, Lisp, Python, PHP, HTML, or JavaScript code, and         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>outputs an XHTML version of that code, with appropriate highlighting.           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>CHIP contains measures to protect against spambots: any email addresses in the  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>input file are obfuscated in the output, and then this obfuscation is           
<span class="l">&nbsp;&nbsp;40</span>corrected by a JavaScript function.  This should stymie any searches for email  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>addresses as it is too expensive for spiders to execute JavaScript in their     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>search for addresses.  In order that the addresses are not found in the plain   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>version instead, the links to those files are obfuscated too.  This means that  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>spiders, both for respectable search engines and disreputable spammers, will    
<span class="l">&nbsp;&nbsp;45</span>not be able to follow those links.                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>See the README file for installation and configuration details.                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;50</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>Developers' Info                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>----------------                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>CHIP requires PHP &gt;= 4.1.0.  This is because it uses $_GET and $_SERVER         
<span class="l">&nbsp;&nbsp;55</span>instead of $HTTP_GET_VARS and $HTTP_SERVER_VARS, as the latter two are          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>deprecated and will be disablable from PHP 5.0.                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>*/</span>                                                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;60</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>$<span class='chip-variable'>behaviourMap</span> = <span class='chip-keyword'>array</span>(                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  "<span class='chip-string'>.C</span>"       =&gt; "<span class='chip-string'>c++</span>",                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  "<span class='chip-string'>.c</span>"       =&gt; "<span class='chip-string'>c++</span>",                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  "<span class='chip-string'>.cc</span>"      =&gt; "<span class='chip-string'>c++</span>",                                                          
<span class="l">&nbsp;&nbsp;65</span>  "<span class='chip-string'>.cpp</span>"     =&gt; "<span class='chip-string'>c++</span>",                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  "<span class='chip-string'>.c++</span>"     =&gt; "<span class='chip-string'>c++</span>",                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  "<span class='chip-string'>.H</span>"       =&gt; "<span class='chip-string'>c++</span>",                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  "<span class='chip-string'>.h</span>"       =&gt; "<span class='chip-string'>c++</span>",                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  "<span class='chip-string'>.hh</span>"      =&gt; "<span class='chip-string'>c++</span>",                                                          
<span class="l">&nbsp;&nbsp;70</span>  "<span class='chip-string'>.htm</span>"     =&gt; "<span class='chip-string'>html</span>",                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  "<span class='chip-string'>.html</span>"    =&gt; "<span class='chip-string'>html</span>",                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  "<span class='chip-string'>.java</span>"    =&gt; "<span class='chip-string'>java</span>",                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  "<span class='chip-string'>.jl</span>"      =&gt; "<span class='chip-string'>lisp</span>",                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  "<span class='chip-string'>.js</span>"      =&gt; "<span class='chip-string'>javascript</span>",                                                   
<span class="l">&nbsp;&nbsp;75</span>  "<span class='chip-string'>.lisp</span>"    =&gt; "<span class='chip-string'>lisp</span>",                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  "<span class='chip-string'>.lsp</span>"     =&gt; "<span class='chip-string'>lisp</span>",                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  "<span class='chip-string'>.php</span>"     =&gt; "<span class='chip-string'>php</span>",                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  "<span class='chip-string'>-php.txt</span>" =&gt; "<span class='chip-string'>php</span>",                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  "<span class='chip-string'>.php4</span>"    =&gt; "<span class='chip-string'>php</span>",                                                          
<span class="l">&nbsp;&nbsp;80</span>  "<span class='chip-string'>.py</span>"      =&gt; "<span class='chip-string'>python</span>"                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  );                                                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/**                                                                             
<span class="l">&nbsp;&nbsp;85</span> * Whether email addresses are obfuscated in comments in the output.  This is   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * a spam-protection measure; disable this at your peril!                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> */</span>                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>define</span>("<span class='chip-string'>OBFUSCATE_EMAIL_ADDRESSES</span>", <span class='chip-keyword'>TRUE</span>);                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;90</span><span class='chip-comment'>/**                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * Whether links to the plain output are obfuscated in the output.  This is a   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * spam-protection measure; disable this at your peril!                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> */</span>                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>define</span>("<span class='chip-string'>OBFUSCATE_PLAIN_PAGE_LINKS</span>", <span class='chip-keyword'>TRUE</span>);                                     
<span class="l">&nbsp;&nbsp;95</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/**                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * Whether to apply the heuristics when processing URLs.  These heuristics are  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * designed to separate URLs from the surrounding punctuation.                  
<span class="l">&nbsp;100</span> */</span>                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>define</span>("<span class='chip-string'>APPLY_URL_HEURISTICS</span>", <span class='chip-keyword'>TRUE</span>);                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>define</span>("<span class='chip-string'>BREADCRUMB_SEPARATOR</span>",                                                  
<span class="l">&nbsp;105</span>  "<span class='chip-string'>&lt;span class='chip-breadcrumbArrow'&gt;&amp;nbsp;&amp;nbsp;&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;</span>");    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/**                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * Whether to show line numbers by default.  Overridden by the linenumbers      
<span class="l">&nbsp;110</span> * parameter.                                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> */</span>                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>define</span>("<span class='chip-string'>DEFAULT_SHOW_LINE_NUMBERS</span>", <span class='chip-keyword'>TRUE</span>);                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;115</span><span class='chip-comment'>/**                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * How regularly line numbers should be inserted.                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> */</span>                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>define</span>("<span class='chip-string'>LINE_NUMBER_MODULUS</span>", 5);                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;120</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/**                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * The column to which each line is padded.  Padding improves the appearance    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * of blocks of mixed-language code.                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> */</span>                                                                             
<span class="l">&nbsp;125</span><span class='chip-keyword'>define</span>("<span class='chip-string'>PAD_COLUMN</span>", 80);                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/**                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * The transition to use when revealing the page.  Using a transition hides     
<span class="l">&nbsp;130</span> * the changes to the page caused when the JavaScript fixes any embedded email  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * addresses and URLs and the links to the plain pages.                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> *                                                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * Transitions are specific to Internet Explorer.  The HTTP header Page-Enter:  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * revealTrans(duration='1', transition='n') is used, when n is the number      
<span class="l">&nbsp;135</span> * given below.                                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> *                                                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * This value may be -1, in which case no transition is used.                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> *                                                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * This value may be overridden by the "transition" script parameter.           
<span class="l">&nbsp;140</span> */</span>                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>define</span>("<span class='chip-string'>DEFAULT_TRANSITION</span>", 20);                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/**                                                                             
<span class="l">&nbsp;145</span> * @return The header applied to our output.  Pure XHTML.                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> */</span>                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>function</span> pageHeader()                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>filename</span>;                                                             
<span class="l">&nbsp;150</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>obfuscatedLink</span> = plainPageObfuscatedLink(<span class='chip-keyword'>FALSE</span>);                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>breadcrumb</span> = breadcrumb();                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> ($<span class='chip-variable'>breadcrumb</span> == "<span class='chip-string'></span>")                                                        
<span class="l">&nbsp;155</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>return</span> &lt;&lt;&lt;EOS                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>&lt;p style="<span class='chip-string'>text-align: right</span>"&gt;$<span class='chip-variable'>obfuscatedLink</span>&lt;/p&gt;                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>&lt;p style="<span class='chip-string'>text-align: center</span>"&gt;&amp;middot; $<span class='chip-variable'>filename</span> &amp;middot;&lt;/p&gt;                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;160</span>EOS;                                                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>else</span>                                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>return</span> &lt;&lt;&lt;EOS                                                               
<span class="l">&nbsp;165</span>&lt;p class="<span class='chip-string'>chip-breadcrumbs</span>"&gt;$<span class='chip-variable'>breadcrumb</span>&lt;/p&gt;                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>&lt;p class="<span class='chip-string'>chip-toplink</span>"&gt;$<span class='chip-variable'>obfuscatedLink</span>&lt;/p&gt;                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>&lt;p class="<span class='chip-string'>chip-breadcrumbSkipper</span>"&gt;&amp;nbsp;&lt;/p&gt;                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>&lt;p style="<span class='chip-string'>text-align: center</span>"&gt;&amp;middot; $<span class='chip-variable'>filename</span> &amp;middot;&lt;/p&gt;                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;170</span>EOS;                                                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;175</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/**                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * @return The footer applied to our output.  Pure XHTML.                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> */</span>                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>function</span> pageFooter()                                                           
<span class="l">&nbsp;180</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>filename</span>;                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>obfuscatedLink</span> = plainPageObfuscatedLink(<span class='chip-keyword'>TRUE</span>);                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;185</span>  $<span class='chip-variable'>chipLink</span> = chipAttribution();                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>return</span> &lt;&lt;&lt;EOS                                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>&lt;p style="<span class='chip-string'>text-align: center</span>"&gt;&amp;middot; $<span class='chip-variable'>filename</span> ends &amp;middot;&lt;/p&gt;              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>&lt;p class="<span class='chip-string'>chip-bottomlink</span>"&gt;$<span class='chip-variable'>obfuscatedLink</span>&lt;/p&gt;                                  
<span class="l">&nbsp;190</span>&lt;p class="<span class='chip-string'>chip-attribution</span>"&gt;$<span class='chip-variable'>chipLink</span>&lt;/p&gt;                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>EOS;                                                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;195</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/**                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * @param bottom Whether the bottom link is requested or the top.               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * @return The obfuscated link to the plain page (or the non-obfuscated         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * version, if OBFUSCATE_PLAIN_PAGE_LINKS is FALSE).                            
<span class="l">&nbsp;200</span> */</span>                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>function</span> plainPageObfuscatedLink($<span class='chip-variable'>bottom</span>)                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>topLinkLabel</span>;                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>bottomLinkLabel</span>;                                                      
<span class="l">&nbsp;205</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>path</span>;                                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>url</span>;                                                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> (OBFUSCATE_PLAIN_PAGE_LINKS)                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;210</span>    $<span class='chip-variable'>label</span> = $<span class='chip-variable'>bottom</span> ? $<span class='chip-variable'>bottomLinkLabel</span> : $<span class='chip-variable'>topLinkLabel</span>;                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>return</span> &lt;&lt;&lt;EOS                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>&lt;span id='<span class='chip-string'>$label</span>'&gt;                                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>To load this file without formatting, visit $<span class='chip-variable'>url.</span>  This is a spam-protection    
<span class="l">&nbsp;215</span>measure; sorry <span class='chip-keyword'>for</span> the inconvenience.                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>&lt;/span&gt;                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>EOS;                                                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;220</span>  <span class='chip-keyword'>else</span>                                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>return</span> anchor($<span class='chip-variable'>path</span>, plainPageAnchorText());                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;225</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/**                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * @return The text to label the anchor that refers to plain text versions of   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * our output.                                                                  
<span class="l">&nbsp;230</span> */</span>                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>function</span> plainPageAnchorText()                                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>filename</span>;                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;235</span>  <span class='chip-keyword'>return</span> "<span class='chip-string'>(Load $filename without formatting)</span>";                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/**                                                                             
<span class="l">&nbsp;240</span> * @return A link to the CHIP home page to use as attribution.                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> */</span>                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>function</span> chipAttribution()                                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>return</span>                                                                        
<span class="l">&nbsp;245</span>    anchor("<span class='chip-string'>http://www.ewanmellor.org.uk/chip.html</span>",                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>           "<span class='chip-string'>Generated by CHIP: Code Highlighting in PHP, version </span>" . VERSION .  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>           "<span class='chip-string'>.</span>");                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;250</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>function</span> breadcrumb()                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>breadcrumbURLs</span>;                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>breadcrumbTitles</span>;                                                     
<span class="l">&nbsp;255</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>filename</span>;                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> (!isSet($<span class='chip-variable'>breadcrumbURLs[0]</span>))                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>return</span> "<span class='chip-string'></span>";                                                                  
<span class="l">&nbsp;260</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result</span> = "<span class='chip-string'></span>";                                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>i</span> = 0;                                                                       
<span class="l">&nbsp;265</span>  while (isSet($<span class='chip-variable'>breadcrumbURLs[$i]</span>))                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>result</span> .= "<span class='chip-string'>&lt;a href='$breadcrumbURLs[$i]'&gt;$breadcrumbTitles[$i]&lt;/a&gt;</span>";       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>result</span> .= BREADCRUMB_SEPARATOR;                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>i++</span>;                                                                       
<span class="l">&nbsp;270</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result</span> .= $<span class='chip-variable'>filename</span>;                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>return</span> $<span class='chip-variable'>result</span>;                                                               
<span class="l">&nbsp;275</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/* ** CSS Interface Variables ** */</span>                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;280</span>$<span class='chip-variable'>commentClass</span>          = "<span class='chip-string'>chip-comment</span>";                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>$<span class='chip-variable'>embedded1Class</span>        = "<span class='chip-string'>chip-embedded-1</span>";                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>$<span class='chip-variable'>embedded2Class</span>        = "<span class='chip-string'>chip-embedded-2</span>";                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>$<span class='chip-variable'>inCommentKeywordClass</span> = "<span class='chip-string'>chip-inCommentKeyword</span>";                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>$<span class='chip-variable'>keywordClass</span>          = "<span class='chip-string'>chip-keyword</span>";                                        
<span class="l">&nbsp;285</span>$<span class='chip-variable'>normalClass</span>           = "<span class='chip-string'>chip-normal</span>";                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>$<span class='chip-variable'>stringClass</span>           = "<span class='chip-string'>chip-string</span>";                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>$<span class='chip-variable'>urlClass</span>              = "<span class='chip-string'>chip-url</span>";                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>$<span class='chip-variable'>variableClass</span>         = "<span class='chip-string'>chip-variable</span>";                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;290</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/* ** JavaScript Interface Variables ** */</span>                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>$<span class='chip-variable'>emailLabelPrefix</span> = "<span class='chip-string'>chip-rotemailaddress</span>";                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>$<span class='chip-variable'>topLinkLabel</span>     = "<span class='chip-string'>chip-toplink</span>";                                             
<span class="l">&nbsp;295</span>$<span class='chip-variable'>bottomLinkLabel</span>  = "<span class='chip-string'>chip-bottomlink</span>";                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/* ** Debugging Options ** */</span>                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;300</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>define</span>("<span class='chip-string'>DISABLE_JAVASCRIPT</span>", <span class='chip-keyword'>FALSE</span>);                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>define</span>("<span class='chip-string'>DEBUG</span>", <span class='chip-keyword'>FALSE</span>);                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;305</span><span class='chip-comment'>/* ** Code Body ** */</span>                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>define</span>("<span class='chip-string'>STRING_LOOKAHEAD</span>", 100);                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;310</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/**                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * The main processing function.                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> */</span>                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>function</span> process()                                                              
<span class="l">&nbsp;315</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>topState</span>;                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>fd</span>;                                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> (!isSet($<span class='chip-variable'>topState</span>))                                                        
<span class="l">&nbsp;320</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>topState</span> =&amp; makeTopState();                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  prepareState(&amp;$<span class='chip-variable'>topState</span>);                                                     
<span class="l">&nbsp;325</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> ($<span class='chip-variable'>topState['class']</span>)                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    newClass($<span class='chip-variable'>topState['class']</span>);                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;330</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  processState("<span class='chip-string'></span>", $<span class='chip-variable'>fd</span>, <span class='chip-keyword'>FALSE</span>, &amp;$<span class='chip-variable'>topState</span>);                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> ($<span class='chip-variable'>topState['class']</span>)                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;335</span>    endClass();                                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;340</span><span class='chip-keyword'>function</span> processState($<span class='chip-variable'>text</span>, $<span class='chip-variable'>fd</span>, $<span class='chip-variable'>eot</span>, &amp;$<span class='chip-variable'>state</span>)                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> (DEBUG)                                                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>echo</span> escape("<span class='chip-string'>\nIn state {$state['name']}\n</span>");                               
<span class="l">&nbsp;345</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>buffer</span> = "<span class='chip-string'></span>";                                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  while (<span class='chip-keyword'>TRUE</span>)                                                                  
<span class="l">&nbsp;350</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>if</span> ($<span class='chip-variable'>fd</span> !== <span class='chip-keyword'>FALSE</span> &amp;&amp; strlen($<span class='chip-variable'>text</span>) &lt; STRING_LOOKAHEAD)                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-keyword'>if</span> (!$<span class='chip-variable'>eot</span> &amp;&amp; strlen($<span class='chip-variable'>buffer</span>) &lt; STRING_LOOKAHEAD)                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      {                                                                         
<span class="l">&nbsp;355</span>        <span class='chip-keyword'>if</span> (feof($<span class='chip-variable'>fd</span>))                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        {                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          $<span class='chip-variable'>eot</span> = <span class='chip-keyword'>TRUE</span>;                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        }                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        <span class='chip-keyword'>else</span>                                                                    
<span class="l">&nbsp;360</span>        {                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          $<span class='chip-variable'>buffer</span> .= fread($<span class='chip-variable'>fd</span>, 4096);                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        }                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      }                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;365</span>      $<span class='chip-variable'>n</span> = min(STRING_LOOKAHEAD, strlen($<span class='chip-variable'>buffer</span>));                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>text</span> .= substr($<span class='chip-variable'>buffer</span>, 0, $<span class='chip-variable'>n</span>);                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>buffer</span> = substr($<span class='chip-variable'>buffer</span>, $<span class='chip-variable'>n</span>, strlen($<span class='chip-variable'>buffer</span>));                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;370</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>if</span> (!$<span class='chip-variable'>eot</span> &amp;&amp; strlen($<span class='chip-variable'>text</span>) &lt; STRING_LOOKAHEAD)                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-keyword'>if</span> (DEBUG)                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      {                                                                         
<span class="l">&nbsp;375</span>        <span class='chip-keyword'>echo</span> "<span class='chip-string'>Returning for more.\n</span>";                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      }                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-keyword'>return</span> $<span class='chip-variable'>text</span>;                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;380</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>if</span> (strlen($<span class='chip-variable'>text</span>) == 0)                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-keyword'>if</span> (DEBUG)                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      {                                                                         
<span class="l">&nbsp;385</span>        <span class='chip-keyword'>echo</span> "<span class='chip-string'>Returning; done.\n</span>";                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      }                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-keyword'>return</span> $<span class='chip-variable'>text</span>;                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;390</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>if</span> ($<span class='chip-variable'>state['inBlock']</span>)                                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>result</span> = processInBlock($<span class='chip-variable'>text</span>, $<span class='chip-variable'>eot</span>, &amp;$<span class='chip-variable'>state</span>, $<span class='chip-variable'>state['inBlock']</span>);        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>state['inBlock']</span> = $<span class='chip-variable'>result[0]</span>;                                           
<span class="l">&nbsp;395</span>      $<span class='chip-variable'>text</span> = $<span class='chip-variable'>result[1]</span>;                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>elseif</span> ($<span class='chip-variable'>state['inSString']</span>)                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>result</span> = processInQuotes($<span class='chip-variable'>text</span>, <span class='chip-keyword'>FALSE</span>);                                  
<span class="l">&nbsp;400</span>      $<span class='chip-variable'>state['inSString']</span> = $<span class='chip-variable'>result[0]</span>;                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>text</span> = $<span class='chip-variable'>result[1]</span>;                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>elseif</span> ($<span class='chip-variable'>state['inDString']</span>)                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;405</span>      $<span class='chip-variable'>result</span> = processInQuotes($<span class='chip-variable'>text</span>, <span class='chip-keyword'>TRUE</span>);                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>state['inDString']</span> = $<span class='chip-variable'>result[0]</span>;                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>text</span> = $<span class='chip-variable'>result[1]</span>;                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>elseif</span> ($<span class='chip-variable'>state['inBlockString']</span>)                                            
<span class="l">&nbsp;410</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>endblock</span> =                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        $<span class='chip-variable'>state['blockStringEnd']</span> ?                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          strstr($<span class='chip-variable'>text</span>, $<span class='chip-variable'>state['blockStringEnd']</span>) :                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          <span class='chip-keyword'>FALSE</span>;                                                                
<span class="l">&nbsp;415</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-keyword'>if</span> ($<span class='chip-variable'>endblock</span> === <span class='chip-keyword'>FALSE</span>)                                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      {                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        output($<span class='chip-variable'>text</span>);                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        $<span class='chip-variable'>text</span> = "<span class='chip-string'></span>";                                                             
<span class="l">&nbsp;420</span>      }                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-keyword'>else</span>                                                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      {                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        $<span class='chip-variable'>before</span> = substr($<span class='chip-variable'>text</span>, 0, strlen($<span class='chip-variable'>text</span>) - strlen($<span class='chip-variable'>endblock</span>));          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;425</span>        output($<span class='chip-variable'>before</span>);                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        endClass();                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        output($<span class='chip-variable'>state['blockStringEnd']</span>);                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        $<span class='chip-variable'>state['inBlockString']</span> = <span class='chip-keyword'>FALSE</span>;                                        
<span class="l">&nbsp;430</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        $<span class='chip-variable'>text</span> = substr($<span class='chip-variable'>endblock</span>, strlen($<span class='chip-variable'>state['blockStringEnd']</span>));            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      }                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>elseif</span> ($<span class='chip-variable'>state['inVariable']</span>)                                               
<span class="l">&nbsp;435</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>bits</span> = preg_split("<span class='chip-string'>/{$state['variableEnd']}/</span>", $<span class='chip-variable'>text</span>, 2,                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                         PREG_SPLIT_DELIM_CAPTURE);                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-keyword'>if</span> (preg_match("<span class='chip-string'>/^{$state['variableEnd']}/</span>", $<span class='chip-variable'>bits[0]</span>) != 0)              
<span class="l">&nbsp;440</span>      {                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        endClass();                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        output($<span class='chip-variable'>bits[0]</span>);                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        $<span class='chip-variable'>text</span> = substr($<span class='chip-variable'>text</span>, strlen($<span class='chip-variable'>bits[0]</span>));                                
<span class="l">&nbsp;445</span>      }                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-keyword'>else</span>                                                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      {                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        output($<span class='chip-variable'>bits[0]</span>);                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;450</span>        <span class='chip-keyword'>if</span> (count($<span class='chip-variable'>bits</span>) &gt; 1)                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        {                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          endClass();                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          $<span class='chip-variable'>state['inVariable']</span> = <span class='chip-keyword'>FALSE</span>;                                         
<span class="l">&nbsp;455</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          $<span class='chip-variable'>text</span> = substr($<span class='chip-variable'>text</span>, strlen($<span class='chip-variable'>bits[0]</span>));                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        }                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        <span class='chip-keyword'>else</span>                                                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        {                                                                       
<span class="l">&nbsp;460</span>          $<span class='chip-variable'>text</span> = substr($<span class='chip-variable'>text</span>, strlen($<span class='chip-variable'>bits[0]</span>));                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        }                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      }                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>else</span>                                                                        
<span class="l">&nbsp;465</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-keyword'>if</span> (DEBUG)                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      {                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        <span class='chip-keyword'>echo</span> "<span class='chip-string'>Doing composite\n</span>";                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      }                                                                         
<span class="l">&nbsp;470</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>regex</span> = $<span class='chip-variable'>state['compositeRegex']</span>;                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>matches</span> = <span class='chip-keyword'>array</span>();                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-keyword'>if</span> ($<span class='chip-variable'>regex</span> === <span class='chip-keyword'>FALSE</span> || preg_match($<span class='chip-variable'>regex</span>, $<span class='chip-variable'>text</span>, $<span class='chip-variable'>matches</span>) == 0)         
<span class="l">&nbsp;475</span>      {                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        <span class='chip-keyword'>if</span> (strlen($<span class='chip-variable'>text</span>) &gt; STRING_LOOKAHEAD)                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        {                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          $<span class='chip-variable'>n</span> = strlen($<span class='chip-variable'>text</span>) - STRING_LOOKAHEAD + 1;                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;480</span>          output(substr($<span class='chip-variable'>text</span>, 0, $<span class='chip-variable'>n</span>));                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          $<span class='chip-variable'>text</span> = substr($<span class='chip-variable'>text</span>, $<span class='chip-variable'>n</span>);                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        }                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        <span class='chip-keyword'>else</span>                                                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        {                                                                       
<span class="l">&nbsp;485</span>          output($<span class='chip-variable'>text</span>);                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          $<span class='chip-variable'>text</span> = "<span class='chip-string'></span>";                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        }                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      }                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-keyword'>else</span>                                                                      
<span class="l">&nbsp;490</span>      {                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        <span class='chip-keyword'>if</span> (DEBUG)                                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        {                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          <span class='chip-keyword'>echo</span> "<span class='chip-string'>\n000{$matches[0]}000\n</span>";                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;495</span>          <span class='chip-keyword'>if</span> ($<span class='chip-variable'>matches[0]</span> == "<span class='chip-string'></span>")                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          {                                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>            output($<span class='chip-variable'>regex</span>);                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          }                                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        }                                                                       
<span class="l">&nbsp;500</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        $<span class='chip-variable'>match</span> = strstr($<span class='chip-variable'>text</span>, $<span class='chip-variable'>matches[0]</span>);                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        $<span class='chip-variable'>before</span> = substr($<span class='chip-variable'>text</span>, 0, strlen($<span class='chip-variable'>text</span>) - strlen($<span class='chip-variable'>match</span>));             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;505</span>        output($<span class='chip-variable'>before</span>);                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        <span class='chip-keyword'>if</span> (strlen($<span class='chip-variable'>match</span>) &lt; STRING_LOOKAHEAD &amp;&amp;                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>            strlen($<span class='chip-variable'>text</span>) &gt; STRING_LOOKAHEAD)                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        {                                                                       
<span class="l">&nbsp;510</span>          $<span class='chip-variable'>text</span> = $<span class='chip-variable'>match</span>;                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          <span class='chip-keyword'>continue</span>;                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        }                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        $<span class='chip-variable'>text</span> = substr($<span class='chip-variable'>match</span>, strlen($<span class='chip-variable'>matches[0]</span>));                            
<span class="l">&nbsp;515</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        <span class='chip-keyword'>if</span> ($<span class='chip-variable'>matches[0]</span> == $<span class='chip-variable'>state['blockStringStart']</span>)                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        {                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          output($<span class='chip-variable'>state['blockStringStart']</span>);                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          newClass($<span class='chip-variable'>state['stringClass']</span>);                                      
<span class="l">&nbsp;520</span>          $<span class='chip-variable'>state['inBlockString']</span> = <span class='chip-keyword'>TRUE</span>;                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        }                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        <span class='chip-keyword'>elseif</span> ($<span class='chip-variable'>matches[0]</span> == "<span class='chip-string'>'</span>")                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        {                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          output("<span class='chip-string'>'</span>");                                                          
<span class="l">&nbsp;525</span>          newClass($<span class='chip-variable'>state['stringClass']</span>);                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          $<span class='chip-variable'>state['inSString']</span> = <span class='chip-keyword'>TRUE</span>;                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        }                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        <span class='chip-keyword'>elseif</span> ($<span class='chip-variable'>matches[0]</span> == '<span class='chip-string'>"</span>')                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        {                                                                       
<span class="l">&nbsp;530</span>          output("<span class='chip-string'>\"</span>");                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          newClass($<span class='chip-variable'>state['stringClass']</span>);                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          $<span class='chip-variable'>state['inDString']</span> = <span class='chip-keyword'>TRUE</span>;                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        }                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        <span class='chip-keyword'>elseif</span> ($<span class='chip-variable'>matches[0]</span> == $<span class='chip-variable'>state['variableStart']</span>)                         
<span class="l">&nbsp;535</span>        {                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          output($<span class='chip-variable'>state['variableStart']</span>);                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          newClass($<span class='chip-variable'>state['variableClass']</span>);                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          $<span class='chip-variable'>state['inVariable']</span> = <span class='chip-keyword'>TRUE</span>;                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        }                                                                       
<span class="l">&nbsp;540</span>        <span class='chip-keyword'>else</span>                                                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        {                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          $<span class='chip-variable'>found</span> = <span class='chip-keyword'>FALSE</span>;                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          <span class='chip-keyword'>foreach</span> ($<span class='chip-variable'>state['blocks']</span> <span class='chip-keyword'>as</span> $<span class='chip-variable'>block</span>)                                  
<span class="l">&nbsp;545</span>          {                                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>            <span class='chip-keyword'>if</span> ($<span class='chip-variable'>matches[0]</span> == $<span class='chip-variable'>block</span>)                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>            {                                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>              <span class='chip-comment'>// We have found the start of a new block.  Enter it.             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span></span>                                                                                
<span class="l">&nbsp;550</span>              $<span class='chip-variable'>new_state</span> =&amp; $<span class='chip-variable'>state['state'][$block]</span>;                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>              <span class='chip-keyword'>if</span> ($<span class='chip-variable'>new_state['class']</span>)                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>              {                                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                newClass($<span class='chip-variable'>new_state['class']</span>);                                  
<span class="l">&nbsp;555</span>              }                                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>              output($<span class='chip-variable'>block</span>);                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>              $<span class='chip-variable'>state['inBlock']</span> = $<span class='chip-variable'>block</span>;                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>              $<span class='chip-variable'>found</span> = <span class='chip-keyword'>TRUE</span>;                                                    
<span class="l">&nbsp;560</span>              <span class='chip-keyword'>break</span>;                                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>            }                                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          }                                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          <span class='chip-keyword'>if</span> (!$<span class='chip-variable'>found</span> &amp;&amp; isSet($<span class='chip-variable'>matches[1]</span>))                                    
<span class="l">&nbsp;565</span>          {                                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>            <span class='chip-keyword'>if</span> (DEBUG)                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>            {                                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>              <span class='chip-keyword'>echo</span> "<span class='chip-string'>\n111{$matches[1]}111\n</span>";                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>            }                                                                   
<span class="l">&nbsp;570</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>            <span class='chip-keyword'>foreach</span> ($<span class='chip-variable'>state['keywords']</span> <span class='chip-keyword'>as</span> $<span class='chip-variable'>keyword</span>)                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>            {                                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>              <span class='chip-keyword'>if</span> (($<span class='chip-variable'>state['keywordsCaseInsensitive']</span> &amp;&amp;                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                   strcasecmp($<span class='chip-variable'>matches[2]</span>, $<span class='chip-variable'>keyword</span>) == 0) ||                   
<span class="l">&nbsp;575</span>                  (!$<span class='chip-variable'>state['keywordsCaseInsensitive']</span> &amp;&amp;                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                   $<span class='chip-variable'>matches[2]</span> == $<span class='chip-variable'>keyword</span>))                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>              {                                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                newClass($<span class='chip-variable'>state['keywordClass']</span>);                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                output($<span class='chip-variable'>matches[2]</span>);                                            
<span class="l">&nbsp;580</span>                endClass();                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                <span class='chip-keyword'>if</span> (isSet($<span class='chip-variable'>matches[3]</span>))                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                {                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                  $<span class='chip-variable'>text</span> = $<span class='chip-variable'>matches[3]</span> . $<span class='chip-variable'>text</span>;                                  
<span class="l">&nbsp;585</span>                }                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                $<span class='chip-variable'>found</span> = <span class='chip-keyword'>TRUE</span>;                                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                <span class='chip-keyword'>break</span>;                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>              }                                                                 
<span class="l">&nbsp;590</span>            }                                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          }                                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          <span class='chip-keyword'>if</span> (!$<span class='chip-variable'>found</span> &amp;&amp; startsWith($<span class='chip-variable'>matches[0]</span>, "<span class='chip-string'>http://</span>"))                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          {                                                                     
<span class="l">&nbsp;595</span>            <span class='chip-comment'>// A URL.                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span></span>            processURL($<span class='chip-variable'>matches[0]</span>, &amp;$<span class='chip-variable'>state</span>);                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>            $<span class='chip-variable'>found</span> = <span class='chip-keyword'>TRUE</span>;                                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          }                                                                     
<span class="l">&nbsp;600</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          <span class='chip-keyword'>if</span> (!$<span class='chip-variable'>found</span> &amp;&amp; strchr($<span class='chip-variable'>matches[0]</span>, "<span class='chip-string'>@</span>"))                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          {                                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>            <span class='chip-comment'>// An email address.                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span></span>            processEmailAddress($<span class='chip-variable'>matches[0]</span>);                                   
<span class="l">&nbsp;605</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>            $<span class='chip-variable'>found</span> = <span class='chip-keyword'>TRUE</span>;                                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          }                                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          <span class='chip-keyword'>if</span> (!$<span class='chip-variable'>found</span>)                                                          
<span class="l">&nbsp;610</span>          {                                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>            <span class='chip-comment'>// Can't happen.  Just protecting against accidental infinite       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span></span>            <span class='chip-comment'>// loops.                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span></span>            <span class='chip-keyword'>echo</span> "<span class='chip-string'>Can't Happen!</span>";                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;615</span>            <span class='chip-keyword'>return</span> "<span class='chip-string'></span>";                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          }                                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        }                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      }                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;620</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>function</span> processInBlock($<span class='chip-variable'>text</span>, $<span class='chip-variable'>eot</span>, &amp;$<span class='chip-variable'>state</span>, $<span class='chip-variable'>nestedStateMarker</span>)               
<span class="l">&nbsp;625</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> (DEBUG)                                                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    output("<span class='chip-string'>InBlock $nestedStateMarker.\n</span>");                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;630</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>nested_state</span> =&amp; $<span class='chip-variable'>state['state'][$nestedStateMarker]</span>;                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>end_marker</span> = $<span class='chip-variable'>state['end'][$nestedStateMarker]</span>;                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;635</span>  $<span class='chip-variable'>end</span> = strstr($<span class='chip-variable'>text</span>, $<span class='chip-variable'>end_marker</span>);                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> ($<span class='chip-variable'>end</span> === <span class='chip-keyword'>FALSE</span>)                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-comment'>// We have not reached the end of this block.  Process the remaining        
<span class="l">&nbsp;640</span></span>    <span class='chip-comment'>// text in the nested state.                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span></span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>text</span> = processState($<span class='chip-variable'>text</span>, <span class='chip-keyword'>FALSE</span>, $<span class='chip-variable'>eot</span>, &amp;$<span class='chip-variable'>nested_state</span>);                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>return</span> <span class='chip-keyword'>array</span>($<span class='chip-variable'>nestedStateMarker</span>, $<span class='chip-variable'>text</span>);                                    
<span class="l">&nbsp;645</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>else</span>                                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-comment'>// We have reached the end of this block.  Finish off, and leave this       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span></span>    <span class='chip-comment'>// state.                                                                   
<span class="l">&nbsp;650</span></span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>before</span> = substr($<span class='chip-variable'>text</span>, 0, strlen($<span class='chip-variable'>text</span>) - strlen($<span class='chip-variable'>end</span>));                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    processState($<span class='chip-variable'>before</span>, <span class='chip-keyword'>FALSE</span>, <span class='chip-keyword'>TRUE</span>, &amp;$<span class='chip-variable'>nested_state</span>);                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;655</span>    <span class='chip-keyword'>if</span> (inSomething(&amp;$<span class='chip-variable'>nested_state</span>))                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-comment'>// Nested state isn't finished, so that means that we've not really       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span></span>      <span class='chip-comment'>// reached the end of the block.                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span></span>                                                                                
<span class="l">&nbsp;660</span>      output($<span class='chip-variable'>end_marker</span>);                                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-keyword'>if</span> (DEBUG)                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      {                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        <span class='chip-keyword'>echo</span> escape("<span class='chip-string'>Not really leaving State </span>" .                               
<span class="l">&nbsp;665</span>                    $<span class='chip-variable'>state['state'][$nestedStateMarker]['name']</span> . "<span class='chip-string'>\n</span>");        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      }                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-keyword'>return</span> <span class='chip-keyword'>array</span>($<span class='chip-variable'>nestedStateMarker</span>, substr($<span class='chip-variable'>end</span>, strlen($<span class='chip-variable'>end_marker</span>)));      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;670</span>    <span class='chip-keyword'>else</span>                                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-comment'>// Really finished.                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span></span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      output($<span class='chip-variable'>end_marker</span>);                                                      
<span class="l">&nbsp;675</span>      <span class='chip-keyword'>if</span> ($<span class='chip-variable'>nested_state['class']</span>)                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      {                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        endClass();                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      }                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;680</span>      <span class='chip-keyword'>if</span> (DEBUG)                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      {                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        <span class='chip-keyword'>echo</span> escape("<span class='chip-string'>Leaving State </span>" .                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                    $<span class='chip-variable'>state['state'][$nestedStateMarker]['name']</span> .               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                    "<span class='chip-string'> for </span>" . $<span class='chip-variable'>state['name']</span> . "<span class='chip-string'>\n</span>");                           
<span class="l">&nbsp;685</span>      }                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-keyword'>return</span> <span class='chip-keyword'>array</span>(<span class='chip-keyword'>FALSE</span>, substr($<span class='chip-variable'>end</span>, strlen($<span class='chip-variable'>end_marker</span>)));                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;690</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>function</span> inSomething(&amp;$<span class='chip-variable'>state</span>)                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;695</span>  <span class='chip-keyword'>return</span>                                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>state['inSString']</span>     ||                                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>state['inDString']</span>     ||                                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>state['inBlockString']</span> ||                                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>state['inVariable']</span>    ||                                                  
<span class="l">&nbsp;700</span>    $<span class='chip-variable'>state['inBlock']</span>;                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/**                                                                             
<span class="l">&nbsp;705</span> * @return An array with the first element TRUE if still inside the quotes,     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * false otherwise, and the second element the text left to process.            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> */</span>                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>function</span> processInQuotes($<span class='chip-variable'>text</span>, $<span class='chip-variable'>doubleQuotes</span>)                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;710</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>stringsOneLine</span>;                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>quote_char</span> = $<span class='chip-variable'>doubleQuotes</span> ? '<span class='chip-string'>"</span>' : "<span class='chip-string'>'</span>";                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> ($<span class='chip-variable'>text{0}</span> == $<span class='chip-variable'>quote_char</span>)                                                  
<span class="l">&nbsp;715</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    endClass();                                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    output($<span class='chip-variable'>quote_char</span>);                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>return</span> <span class='chip-keyword'>array</span>(<span class='chip-keyword'>FALSE</span>, substr($<span class='chip-variable'>text</span>, 1));                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;720</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>quote_pattern</span> = "<span class='chip-string'>(?:\\\\\\\\)*$quote_char</span>";                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> ($<span class='chip-variable'>stringsOneLine</span>)                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;725</span>    $<span class='chip-variable'>quote_pattern</span> = "<span class='chip-string'>($quote_pattern|\n|\r)</span>";                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>else</span>                                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>quote_pattern</span> = "<span class='chip-string'>($quote_pattern)</span>";                                        
<span class="l">&nbsp;730</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>prequote_pattern</span> = '<span class='chip-string'>(^|(?:^.*?[^\\\\]))</span>';                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> (preg_match("<span class='chip-string'>/$prequote_pattern$quote_pattern/s</span>", $<span class='chip-variable'>text</span>,                   
<span class="l">&nbsp;735</span>                 $<span class='chip-variable'>quotesplit</span>) == 0)                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    output($<span class='chip-variable'>text</span>);                                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>return</span> <span class='chip-keyword'>array</span>(<span class='chip-keyword'>TRUE</span>, "<span class='chip-string'></span>");                                                     
<span class="l">&nbsp;740</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>else</span>                                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    output($<span class='chip-variable'>quotesplit[1]</span>);                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    endClass();                                                                 
<span class="l">&nbsp;745</span>    output($<span class='chip-variable'>quotesplit[2]</span>);                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>return</span> <span class='chip-keyword'>array</span>(<span class='chip-keyword'>FALSE</span>,                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                 substr($<span class='chip-variable'>text</span>,                                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                        strlen($<span class='chip-variable'>quotesplit[1]</span>) + strlen($<span class='chip-variable'>quotesplit[2]</span>)));      
<span class="l">&nbsp;750</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>$<span class='chip-variable'>rotted</span> = -1;                                                                   
<span class="l">&nbsp;755</span><span class='chip-comment'>/**                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * Process the given email address, obfuscating it so that the JavaScript can   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * find it later.                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> */</span>                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>function</span> processEmailAddress($<span class='chip-variable'>addr</span>)                                             
<span class="l">&nbsp;760</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>rotted</span>;                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>emailLabelPrefix</span>;                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>rotted++</span>;                                                                    
<span class="l">&nbsp;765</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>after</span> = substr(strstr($<span class='chip-variable'>addr</span>, "<span class='chip-string'>@</span>"), 1);                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>before</span> = substr($<span class='chip-variable'>addr</span>, 0, strlen($<span class='chip-variable'>addr</span>) - strlen($<span class='chip-variable'>after</span>) - 1);               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>echo</span> "<span class='chip-string'>&lt;span id='$emailLabelPrefix$rotted'&gt;</span>";                                  
<span class="l">&nbsp;770</span>  output(str_rot13($<span class='chip-variable'>before</span>));                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  output('<span class='chip-string'> at </span>');                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  output(str_rot13($<span class='chip-variable'>after</span>));                                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>echo</span> '<span class='chip-string'>&lt;/span&gt;</span>';                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;775</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/**                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * Process the given URL, by wrapping it in a span element giving the           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * appropriate class, and making it into a link.                                
<span class="l">&nbsp;780</span> *                                                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * @see #APPLY_URL_HEURISTICS                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> */</span>                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>function</span> processURL($<span class='chip-variable'>url</span>, &amp;$<span class='chip-variable'>state</span>)                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;785</span>  $<span class='chip-variable'>suffix</span> = "<span class='chip-string'></span>";                                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> (APPLY_URL_HEURISTICS)                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>n</span> = strlen($<span class='chip-variable'>url</span>);                                                          
<span class="l">&nbsp;790</span>    $<span class='chip-variable'>c</span> = $<span class='chip-variable'>url[$n</span> - 1];                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>if</span> ($<span class='chip-variable'>c</span> == '<span class='chip-string'>.</span>' || $<span class='chip-variable'>c</span> == "<span class='chip-string'>)</span>" || $<span class='chip-variable'>c</span> == "<span class='chip-string'>,</span>" || $<span class='chip-variable'>c</span> == "<span class='chip-string'>;</span>" || $<span class='chip-variable'>c</span> == "<span class='chip-string'>:</span>" ||        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        $<span class='chip-variable'>c</span> == '<span class='chip-string'>?</span>' || $<span class='chip-variable'>c</span> == "<span class='chip-string'>!</span>")                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;795</span>      $<span class='chip-variable'>url</span> = substr($<span class='chip-variable'>url</span>, 0, $<span class='chip-variable'>n</span> - 1);                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>suffix</span> = $<span class='chip-variable'>c</span>;                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;800</span>  newClass($<span class='chip-variable'>state['urlClass']</span>);                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  outputAnchor($<span class='chip-variable'>url</span>);                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  endClass();                                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  output($<span class='chip-variable'>suffix</span>);                                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;805</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/* ** Handling of the Simple and Advanced Interfaces ** */</span>                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/**                                                                             
<span class="l">&nbsp;810</span> * @return A state block derived from the settings given via the simple         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * interface.                                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> */</span>                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>function</span> makeTopState()                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;815</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>commentClass</span>;                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>sQuotedStrings</span>;                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>dQuotedStrings</span>;                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;820</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>keywords</span>;                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>keywordsCaseInsensitive</span>;                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>inCommentKeywords</span>;                                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>blockCommentStart</span>;                                                    
<span class="l">&nbsp;825</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>blockCommentEnd</span>;                                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>blockStringStart</span>;                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>blockStringEnd</span>;                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>keywordStartLetters</span>;                                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>keywordEndLetters</span>;                                                    
<span class="l">&nbsp;830</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>lineCommentStart</span>;                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>variableStart</span>;                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>variableEnd</span>;                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;835</span>  $<span class='chip-variable'>top_state</span> =&amp; newState();                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  setInState($<span class='chip-variable'>top_state</span>, '<span class='chip-string'>sQuotedStrings</span>');                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  setInState($<span class='chip-variable'>top_state</span>, '<span class='chip-string'>dQuotedStrings</span>');                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;840</span>  setInState($<span class='chip-variable'>top_state</span>, '<span class='chip-string'>keywords</span>');                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  setInState($<span class='chip-variable'>top_state</span>, '<span class='chip-string'>keywordsCaseInsensitive</span>');                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  setInState($<span class='chip-variable'>top_state</span>, '<span class='chip-string'>blockStringStart</span>');                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  setInState($<span class='chip-variable'>top_state</span>, '<span class='chip-string'>blockStringEnd</span>');                                     
<span class="l">&nbsp;845</span>  setInState($<span class='chip-variable'>top_state</span>, '<span class='chip-string'>keywordStartLetters</span>');                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  setInState($<span class='chip-variable'>top_state</span>, '<span class='chip-string'>keywordEndLetters</span>');                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  setInState($<span class='chip-variable'>top_state</span>, '<span class='chip-string'>variableStart</span>');                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  setInState($<span class='chip-variable'>top_state</span>, '<span class='chip-string'>variableEnd</span>');                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;850</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>comment_state</span> =&amp; newState();                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>comment_state['class']</span> = $<span class='chip-variable'>commentClass</span>;                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>comment_state['processURLs']</span> = <span class='chip-keyword'>TRUE</span>;                                         
<span class="l">&nbsp;855</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> ($<span class='chip-variable'>inCommentKeywords</span>)                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>comment_state['keywords']</span> = $<span class='chip-variable'>inCommentKeywords</span>;                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;860</span>  $<span class='chip-variable'>comment_state['keywordsCaseInsensitive']</span> = <span class='chip-keyword'>FALSE</span>;                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> ($<span class='chip-variable'>blockCommentStart</span>)                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;865</span>    $<span class='chip-variable'>top_state['blocks'][]</span> = $<span class='chip-variable'>blockCommentStart</span>;                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>top_state['end'][$blockCommentStart]</span> = $<span class='chip-variable'>blockCommentEnd</span>;                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>top_state['state'][$blockCommentStart]</span> =&amp; $<span class='chip-variable'>comment_state</span>;                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;870</span>  <span class='chip-keyword'>if</span> ($<span class='chip-variable'>lineCommentStart</span>)                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>top_state['blocks'][]</span> = $<span class='chip-variable'>lineCommentStart</span>;                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>top_state['end'][$lineCommentStart]</span> = "<span class='chip-string'>\n</span>";                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>top_state['state'][$lineCommentStart]</span> =&amp; $<span class='chip-variable'>comment_state</span>;                   
<span class="l">&nbsp;875</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>return</span> $<span class='chip-variable'>top_state</span>;                                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;880</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>function</span> setInState(&amp;$<span class='chip-variable'>state</span>, $<span class='chip-variable'>index</span>, $<span class='chip-variable'>var</span> = <span class='chip-keyword'>FALSE</span>)                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> ($<span class='chip-variable'>var</span> === <span class='chip-keyword'>FALSE</span>)                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;885</span>    $<span class='chip-variable'>var</span> = $<span class='chip-variable'>index</span>;                                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>$var</span>;                                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;890</span>  <span class='chip-keyword'>if</span> (isSet($<span class='chip-variable'>$var</span>))                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>state[$index]</span> = $<span class='chip-variable'>$var</span>;                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;895</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/**                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * Prepare a state block for processing.                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> */</span>                                                                             
<span class="l">&nbsp;900</span><span class='chip-keyword'>function</span> prepareState(&amp;$<span class='chip-variable'>state</span>)                                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> (!isSet($<span class='chip-variable'>state['name']</span>))                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>state['name']</span> = "<span class='chip-string'>topState</span>";                                                
<span class="l">&nbsp;905</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  makeCompositeRegex(&amp;$<span class='chip-variable'>state</span>);                                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>foreach</span> ($<span class='chip-variable'>state['blocks']</span> <span class='chip-keyword'>as</span> $<span class='chip-variable'>block</span>)                                          
<span class="l">&nbsp;910</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>substate</span> =&amp; $<span class='chip-variable'>state['state'][$block]</span>;                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>if</span> (!isSet($<span class='chip-variable'>substate['name']</span>))                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;915</span>      $<span class='chip-variable'>substate['name']</span> = $<span class='chip-variable'>block</span>;                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    prepareState(&amp;$<span class='chip-variable'>substate</span>);                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;920</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/**                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * Make the regex needed to spot each of the features of the language.          
<span class="l">&nbsp;925</span> */</span>                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>function</span> makeCompositeRegex(&amp;$<span class='chip-variable'>state</span>)                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result</span> = "<span class='chip-string'>/(</span>";                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>first</span> = <span class='chip-keyword'>TRUE</span>;                                                                
<span class="l">&nbsp;930</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> ($<span class='chip-variable'>state['blocks']</span> &amp;&amp; count($<span class='chip-variable'>state['blocks']</span>) &gt; 0)                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>result</span> .= preg_alternates($<span class='chip-variable'>state['blocks']</span>);                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>first</span> = <span class='chip-keyword'>FALSE</span>;                                                             
<span class="l">&nbsp;935</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> (count($<span class='chip-variable'>state['keywords']</span>) &gt; 0)                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>if</span> ($<span class='chip-variable'>first</span>)                                                                 
<span class="l">&nbsp;940</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>first</span> = <span class='chip-keyword'>FALSE</span>;                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>else</span>                                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;945</span>      $<span class='chip-variable'>result</span> .= "<span class='chip-string'>|</span>";                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>result</span> .= "<span class='chip-string'>(</span>";                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;950</span>    <span class='chip-keyword'>if</span> ($<span class='chip-variable'>state['keywordStartLetters']</span>)                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>result</span> .= "<span class='chip-string'>(?&lt;![^{$state['keywordStartLetters']}])</span>";                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;955</span>    <span class='chip-keyword'>if</span> ($<span class='chip-variable'>state['keywordsCaseInsensitive']</span>)                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>result</span> .= "<span class='chip-string'>(?i)</span>";                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;960</span>    $<span class='chip-variable'>result</span> .= "<span class='chip-string'>(?:</span>";                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>result</span> .= preg_alternates($<span class='chip-variable'>state['keywords']</span>);                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>result</span> .= "<span class='chip-string'>))</span>";                                                            
<span class="l">&nbsp;965</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>if</span> ($<span class='chip-variable'>state['keywordEndLetters']</span>)                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>result</span> .= "<span class='chip-string'>([{$state['keywordEndLetters']}])</span>";                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;970</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> ($<span class='chip-variable'>state['blockStringStart']</span>)                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;975</span>    <span class='chip-keyword'>if</span> ($<span class='chip-variable'>first</span>)                                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>first</span> = <span class='chip-keyword'>FALSE</span>;                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>else</span>                                                                        
<span class="l">&nbsp;980</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>result</span> .= "<span class='chip-string'>|</span>";                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>result</span> .= preg_addslashes($<span class='chip-variable'>state['blockStringStart']</span>);                     
<span class="l">&nbsp;985</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> ($<span class='chip-variable'>state['variableStart']</span>)                                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>if</span> ($<span class='chip-variable'>first</span>)                                                                 
<span class="l">&nbsp;990</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>first</span> = <span class='chip-keyword'>FALSE</span>;                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>else</span>                                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;995</span>      $<span class='chip-variable'>result</span> .= "<span class='chip-string'>|</span>";                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>result</span> .= preg_addslashes($<span class='chip-variable'>state['variableStart']</span>);                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">1000</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> ($<span class='chip-variable'>state['sQuotedStrings']</span>)                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>if</span> ($<span class='chip-variable'>first</span>)                                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">1005</span>      $<span class='chip-variable'>first</span> = <span class='chip-keyword'>FALSE</span>;                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>else</span>                                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>result</span> .= "<span class='chip-string'>|</span>";                                                           
<span class="l">1010</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>result</span> .= "<span class='chip-string'>'</span>";                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1015</span>  <span class='chip-keyword'>if</span> ($<span class='chip-variable'>state['dQuotedStrings']</span>)                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>if</span> ($<span class='chip-variable'>first</span>)                                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>first</span> = <span class='chip-keyword'>FALSE</span>;                                                           
<span class="l">1020</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>else</span>                                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>result</span> .= "<span class='chip-string'>|</span>";                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">1025</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>result</span> .= '<span class='chip-string'>"</span>';                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> ($<span class='chip-variable'>state['obfuscateEmailAddresses']</span>)                                        
<span class="l">1030</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>emailChar</span> = "<span class='chip-string'>[-A-Za-z0-9!#$%&amp;'*+\/=?^_`{|}~]</span>";                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>if</span> ($<span class='chip-variable'>first</span>)                                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">1035</span>      $<span class='chip-variable'>first</span> = <span class='chip-keyword'>FALSE</span>;                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>else</span>                                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>result</span> .= "<span class='chip-string'>|</span>";                                                           
<span class="l">1040</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>result</span> .= "<span class='chip-string'>((?:$emailChar|\\.)+)@($emailChar+\\.(?:$emailChar|\\.)+)</span>";     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1045</span>  <span class='chip-keyword'>if</span> ($<span class='chip-variable'>state['processURLs']</span>)                                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>urlChar</span> = "<span class='chip-string'>[-A-Za-z0-9_.!~*'()%;\/?:@&amp;=+$,]</span>";                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>if</span> ($<span class='chip-variable'>first</span>)                                                                 
<span class="l">1050</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>first</span> = <span class='chip-keyword'>FALSE</span>;                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>else</span>                                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">1055</span>      $<span class='chip-variable'>result</span> .= "<span class='chip-string'>|</span>";                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>result</span> .= "<span class='chip-string'>http:\/\/($urlChar+)</span>";                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">1060</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result</span> .= "<span class='chip-string'>)/</span>";                                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> (!$<span class='chip-variable'>first</span>)                                                                  
<span class="l">1065</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>state['compositeRegex']</span> = $<span class='chip-variable'>result</span>;                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1070</span>  <span class='chip-keyword'>if</span> (DEBUG)                                                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>echo</span> "<span class='chip-string'>REGEX: </span>" . escape($<span class='chip-variable'>result</span>) . "<span class='chip-string'>\n</span>";                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">1075</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/**                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * Create a new, initialised state block.                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> */</span>                                                                             
<span class="l">1080</span><span class='chip-keyword'>function</span> newState()                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>keywordClass</span>;                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>stringClass</span>;                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>urlClass</span>;                                                             
<span class="l">1085</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>variableClass</span>;                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result</span> = <span class='chip-keyword'>array</span>();                                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result['obfuscateEmailAddresses']</span> = OBFUSCATE_EMAIL_ADDRESSES;               
<span class="l">1090</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result['processURLs']</span> = <span class='chip-keyword'>FALSE</span>;                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result['keywordClass']</span>  = $<span class='chip-variable'>keywordClass</span>;                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result['stringClass']</span>   = $<span class='chip-variable'>stringClass</span>;                                      
<span class="l">1095</span>  $<span class='chip-variable'>result['urlClass']</span>      = $<span class='chip-variable'>urlClass</span>;                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result['variableClass']</span> = $<span class='chip-variable'>variableClass</span>;                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result['sQuotedStrings']</span> = <span class='chip-keyword'>FALSE</span>;                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result['dQuotedStrings']</span> = <span class='chip-keyword'>FALSE</span>;                                            
<span class="l">1100</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result['keywords']</span> = <span class='chip-keyword'>array</span>();                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result['keywordsCaseInsensitive']</span> = <span class='chip-keyword'>FALSE</span>;                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result['class']</span> = <span class='chip-keyword'>FALSE</span>;                                                     
<span class="l">1105</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result['blockStringStart']</span>    = <span class='chip-keyword'>FALSE</span>;                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result['blockStringEnd']</span>      = <span class='chip-keyword'>FALSE</span>;                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result['keywordStartLetters']</span> = "<span class='chip-string'> \t\n\r,.;:()</span>";                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result['keywordEndLetters']</span>   = "<span class='chip-string'> \t\n\r,.;:()</span>";                             
<span class="l">1110</span>  $<span class='chip-variable'>result['variableStart']</span>       = <span class='chip-keyword'>FALSE</span>;                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result['variableEnd']</span>         = "<span class='chip-string'>[ \t\n\r,;()&lt;&gt;]</span>";                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result['compositeRegex']</span> = <span class='chip-keyword'>FALSE</span>;                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1115</span>  $<span class='chip-variable'>result['inSString']</span>      = <span class='chip-keyword'>FALSE</span>;                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result['inDString']</span>      = <span class='chip-keyword'>FALSE</span>;                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result['inBlockString']</span>  = <span class='chip-keyword'>FALSE</span>;                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result['inVariable']</span>     = <span class='chip-keyword'>FALSE</span>;                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result['inBlock']</span>        = <span class='chip-keyword'>FALSE</span>;                                            
<span class="l">1120</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result['blocks']</span> = <span class='chip-keyword'>array</span>();                                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result['end']</span> = <span class='chip-keyword'>array</span>();                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result['state']</span> = <span class='chip-keyword'>array</span>();                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1125</span>  <span class='chip-keyword'>return</span> $<span class='chip-variable'>result</span>;                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/* ** Output ** */</span>                                                              
<span class="l">1130</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>$<span class='chip-variable'>lineNumber</span> = 1;                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>$<span class='chip-variable'>columnNumber</span> = 0;                                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>$<span class='chip-variable'>numberNeeded</span> = <span class='chip-keyword'>true</span>;                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1135</span><span class='chip-comment'>/**                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * Output the given text.  Handles line padding and line numbering.  Only       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * pass this function body text in need of escaping -- in particular, do        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * not pass text containing tags.                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> */</span>                                                                             
<span class="l">1140</span><span class='chip-keyword'>function</span> output($<span class='chip-variable'>text</span>)                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>columnNumber</span>;                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>lineNumber</span>;                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>numberNeeded</span>;                                                         
<span class="l">1145</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>showLineNumbers</span>;                                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-comment'>// Shortcut for speed.                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span></span>  <span class='chip-keyword'>if</span> (PAD_COLUMN &lt; 1 &amp;&amp; !$<span class='chip-variable'>showLineNumbers</span>)                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">1150</span>    <span class='chip-keyword'>echo</span> escape($<span class='chip-variable'>test</span>);                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>return</span>;                                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1155</span>  $<span class='chip-variable'>bits</span> = explode("<span class='chip-string'>\n</span>", $<span class='chip-variable'>text</span>);                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>i</span> = 0;                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>n</span> = count($<span class='chip-variable'>bits</span>) - 1;                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>foreach</span> ($<span class='chip-variable'>bits</span> <span class='chip-keyword'>as</span> $<span class='chip-variable'>bit</span>)                                                       
<span class="l">1160</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>if</span> ($<span class='chip-variable'>showLineNumbers</span> &amp;&amp; $<span class='chip-variable'>numberNeeded</span>)                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-comment'>/* The class for line numbers is called 'l'.  It saves 10% of the file    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>         size in some cases to use a short name over a more descriptive one.    
<span class="l">1165</span>      */</span>                                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-keyword'>echo</span> '<span class='chip-string'>&lt;span class="l"&gt;</span>';                                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-keyword'>if</span> ($<span class='chip-variable'>lineNumber</span> == 1 || $<span class='chip-variable'>lineNumber</span> % LINE_NUMBER_MODULUS == 0)           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      {                                                                         
<span class="l">1170</span>        <span class='chip-keyword'>if</span> ($<span class='chip-variable'>lineNumber</span> &lt; 10)                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        {                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          <span class='chip-keyword'>echo</span> '<span class='chip-string'>&amp;nbsp;&amp;nbsp;&amp;nbsp;</span>';                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        }                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        <span class='chip-keyword'>elseif</span> ($<span class='chip-variable'>lineNumber</span> &lt; 100)                                              
<span class="l">1175</span>        {                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>          <span class='chip-keyword'>echo</span> '<span class='chip-string'>&amp;nbsp;&amp;nbsp;</span>';                                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        }                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        <span class='chip-keyword'>elseif</span> ($<span class='chip-variable'>lineNumber</span> &lt; 1000)                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        {                                                                       
<span class="l">1180</span>          <span class='chip-keyword'>echo</span> '<span class='chip-string'>&amp;nbsp;</span>';                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        }                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        <span class='chip-keyword'>echo</span> $<span class='chip-variable'>lineNumber</span>;                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      }                                                                         
<span class="l">1185</span>      <span class='chip-keyword'>else</span>                                                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      {                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        <span class='chip-keyword'>echo</span> '<span class='chip-string'>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span>';                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      }                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1190</span>      $<span class='chip-variable'>numberNeeded</span> = <span class='chip-keyword'>false</span>;                                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-keyword'>echo</span> '<span class='chip-string'>&lt;/span&gt;</span>';                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1195</span>    <span class='chip-keyword'>echo</span> escape($<span class='chip-variable'>bit</span>);                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>columnNumber</span> += strlen($<span class='chip-variable'>bit</span>);                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>if</span> ($<span class='chip-variable'>i</span> != $<span class='chip-variable'>n</span>)                                                               
<span class="l">1200</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      while ($<span class='chip-variable'>columnNumber</span> &lt; PAD_COLUMN)                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      {                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        <span class='chip-keyword'>echo</span> '<span class='chip-string'> </span>';                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>        $<span class='chip-variable'>columnNumber++</span>;                                                        
<span class="l">1205</span>      }                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-keyword'>echo</span> "<span class='chip-string'>\n</span>";                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>lineNumber++</span>;                                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>columnNumber</span> = 0;                                                        
<span class="l">1210</span>      $<span class='chip-variable'>numberNeeded</span> = <span class='chip-keyword'>true</span>;                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>i++</span>;                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">1215</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>function</span> anchor($<span class='chip-variable'>url</span>, $<span class='chip-variable'>text</span>)                                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">1220</span>  <span class='chip-keyword'>return</span> "<span class='chip-string'>&lt;a href='$url'&gt;</span>" . escape($<span class='chip-variable'>text</span>) . "<span class='chip-string'>&lt;/a&gt;</span>";                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>function</span> outputAnchor($<span class='chip-variable'>url</span>)                                                     
<span class="l">1225</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>echo</span> "<span class='chip-string'>&lt;a href='$url'&gt;</span>";                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  output($<span class='chip-variable'>url</span>);                                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>echo</span> "<span class='chip-string'>&lt;/a&gt;</span>";                                                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">1230</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>function</span> newClass($<span class='chip-variable'>class</span>)                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>echo</span> "<span class='chip-string'>&lt;span class='$class'&gt;</span>";                                                 
<span class="l">1235</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>function</span> endClass()                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">1240</span>  <span class='chip-keyword'>echo</span> '<span class='chip-string'>&lt;/span&gt;</span>';                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>function</span> transitionMeta()                                                       
<span class="l">1245</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>global</span> $<span class='chip-variable'>transition</span>;                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>return</span>                                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>transition</span> == -1 ?                                                         
<span class="l">1250</span>    "<span class='chip-string'></span>" :                                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    "<span class='chip-string'>&lt;meta http-equiv='Page-Enter'                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>           content='revealTrans(duration=\"1\",transition=\"$transition\")' /&gt;  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span></span>";                                                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">1255</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/* ** Helpers ** */</span>                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1260</span><span class='chip-keyword'>function</span> escape($<span class='chip-variable'>text</span>)                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>return</span> htmlentities($<span class='chip-variable'>text</span>, ENT_NOQUOTES);                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1265</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/**                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * Implementation of str_rot13 for PHP versions &lt;4.2.0.                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> */</span>                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>if</span> (!function_exists('<span class='chip-string'>str_rot13</span>'))                                              
<span class="l">1270</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>function</span> str_rot13($<span class='chip-variable'>str</span>)                                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>from</span> = '<span class='chip-string'>abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ</span>';             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>to</span>   = '<span class='chip-string'>nopqrstuvwxyzabcdefghijklmNOPQRSTUVWXYZABCDEFGHIJKLM</span>';             
<span class="l">1275</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>return</span> strtr($<span class='chip-variable'>str</span>, $<span class='chip-variable'>from</span>, $<span class='chip-variable'>to</span>);                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1280</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>function</span> preg_alternates($<span class='chip-variable'>alts</span>)                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>result</span> = "<span class='chip-string'></span>";                                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>first</span> = <span class='chip-keyword'>TRUE</span>;                                                                
<span class="l">1285</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>foreach</span> ($<span class='chip-variable'>alts</span> <span class='chip-keyword'>as</span> $<span class='chip-variable'>alt</span>)                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>if</span> ($<span class='chip-variable'>first</span>)                                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">1290</span>      $<span class='chip-variable'>first</span> = <span class='chip-keyword'>FALSE</span>;                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>else</span>                                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>result</span> .= "<span class='chip-string'>|</span>";                                                           
<span class="l">1295</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>result</span> .= preg_addslashes($<span class='chip-variable'>alt</span>);                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1300</span>  <span class='chip-keyword'>return</span> $<span class='chip-variable'>result</span>;                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/**                                                                             
<span class="l">1305</span> * By <span id='chip-rotemailaddress1'>xriva.oeb at ubfgrqfghss.pbz</span> on                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> * <span class='chip-url'><a href='http://uk.php.net/manual/en/function.preg-match.php'>http://uk.php.net/manual/en/function.preg-match.php</a></span>.                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span> */</span>                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>function</span> preg_addslashes($<span class='chip-variable'>foo</span>)                                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">1310</span>   <span class='chip-keyword'>return</span> preg_replace("<span class='chip-string'>/([^A-z0-9_-]|[\\\[\]])/</span>", "<span class='chip-string'>\\\\\\1</span>", $<span class='chip-variable'>foo</span>);            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>function</span> startsWith($<span class='chip-variable'>haystack</span>, $<span class='chip-variable'>needle</span>)                                         
<span class="l">1315</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>return</span> 0 == strncmp($<span class='chip-variable'>haystack</span>, $<span class='chip-variable'>needle</span>, strlen($<span class='chip-variable'>needle</span>));                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1320</span><span class='chip-keyword'>function</span> endsWith($<span class='chip-variable'>haystack</span>, $<span class='chip-variable'>needle</span>)                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>return</span> substr($<span class='chip-variable'>haystack</span>, strlen($<span class='chip-variable'>haystack</span>) - strlen($<span class='chip-variable'>needle</span>)) === $<span class='chip-variable'>needle</span>;    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1325</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>function</span> usage()                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>echo</span> "<span class='chip-string'>                                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{$_SERVER['argv'][0]} &lt;filename&gt; [&lt;options&gt;]                                    
<span class="l">1330</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>where                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    &lt;filename&gt; is the name of the script to process; and                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    &lt;options&gt;  can be any of                                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1335</span>       file=&lt;filename&gt; where &lt;filename&gt; overrides any filename given earlier    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                             on the command line;                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>       dir=&lt;directory&gt; where &lt;directory&gt; specifies the directory where the      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                             CHIP CSS and JavaScript files are held (defaults   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                             to the empty string);                              
<span class="l">1340</span>       title=&lt;title&gt;   where &lt;title&gt; is the title given to the output page      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                             (defaults to &lt;filename&gt;);                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>       transition=&lt;n&gt;  where &lt;n&gt; is a code for the page-entry transition,       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                             or -1 to disable transitions (defaults to </span>" .      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                             DEFAULT_TRANSITION . "<span class='chip-string'>);                           
<span class="l">1345</span>       linenumbers=&lt;n&gt; where &lt;n&gt; is 0 to disable line numbers, or 1 to enable   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                             them (defaults to </span>" .                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                             (DEFAULT_SHOW_LINE_NUMBERS ?                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                "<span class='chip-string'>enabled</span>" :                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                "<span class='chip-string'>disabled</span>") . "<span class='chip-string'>);                               
<span class="l">1350</span>       bcURL0=&lt;url&gt; and bcTitle0=&lt;title&gt; giving the URL and title of the first  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                         breadcrumb, with bcURL1 and bcTitle1   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                         giving the URL and title of the        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                         second breadcrumb, etc.                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span></span>";                                                                              
<span class="l">1355</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/* ** Parameter Processing ** */</span>                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1360</span><span class='chip-keyword'>if</span> (isSet($<span class='chip-variable'>_SERVER['argc']</span>))                                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>args</span> = <span class='chip-keyword'>array</span>();                                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>n</span> = 1;                                                                       
<span class="l">1365</span>  while (isSet($<span class='chip-variable'>_SERVER['argv'][$n]</span>))                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>nameval</span> = $<span class='chip-variable'>_SERVER['argv'][$n]</span>;                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>if</span> ($<span class='chip-variable'>nameval</span> == "<span class='chip-string'>--</span>")                                                       
<span class="l">1370</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-keyword'>continue</span>;                                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>if</span> (startsWith($<span class='chip-variable'>nameval</span>, "<span class='chip-string'>-h</span>") ||                                           
<span class="l">1375</span>        startsWith($<span class='chip-variable'>nameval</span>, "<span class='chip-string'>--h</span>"))                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      usage();                                                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-keyword'>exit</span>;                                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">1380</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>parts</span> = explode('<span class='chip-string'>=</span>', $<span class='chip-variable'>nameval</span>);                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>if</span> (isSet($<span class='chip-variable'>parts[1]</span>))                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">1385</span>      $<span class='chip-variable'>args[$parts[0]]</span> = $<span class='chip-variable'>parts[1]</span>;                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>else</span>                                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>args['file']</span> = $<span class='chip-variable'>parts[0]</span>;                                                
<span class="l">1390</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>n++</span>;                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1395</span>  <span class='chip-keyword'>if</span> (isSet($<span class='chip-variable'>args['file']</span>))                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>path</span> = $<span class='chip-variable'>args['file']</span>;                                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>else</span>                                                                          
<span class="l">1400</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    usage();                                                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>exit</span>;                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1405</span>  $<span class='chip-variable'>dir</span> =                                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    isSet($<span class='chip-variable'>args['dir']</span>) ?                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>args['dir']</span> :                                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      "<span class='chip-string'></span>";                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1410</span>  $<span class='chip-variable'>urlprefix</span> = "<span class='chip-string'></span>";                                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>else</span>                                                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>args</span> = $<span class='chip-variable'>_GET</span>;                                                                
<span class="l">1415</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> (isSet($<span class='chip-variable'>args['file']</span>))                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>path</span> = $<span class='chip-variable'>args['file']</span>;                                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1420</span>    <span class='chip-keyword'>if</span> ($<span class='chip-variable'>path[0]</span> != "<span class='chip-string'>/</span>")                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      $<span class='chip-variable'>path</span> = "<span class='chip-string'>/$path</span>";                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">1425</span>  <span class='chip-keyword'>else</span>                                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    header("<span class='chip-string'>HTTP/1.0 404 Not Found</span>");                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>exit</span>;                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">1430</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>dir</span> = dirname($<span class='chip-variable'>_SERVER['SCRIPT_NAME']</span>);                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>if</span> ($<span class='chip-variable'>dir</span> != "<span class='chip-string'>/</span>")                                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>dir</span> .= "<span class='chip-string'>/</span>";                                                                
<span class="l">1435</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>urlprefix</span> = "<span class='chip-string'>http://{$_SERVER['SERVER_NAME']}</span>";                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1440</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>$<span class='chip-variable'>filename</span> = basename($<span class='chip-variable'>path</span>);                                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>$<span class='chip-variable'>title</span> =                                                                        
<span class="l">1445</span>  isSet($<span class='chip-variable'>args['title']</span>) ?                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>args['title']</span> :                                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>filename</span>;                                                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1450</span>$<span class='chip-variable'>transition</span> =                                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  isSet($<span class='chip-variable'>args['transition']</span>) ?                                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>args['transition']</span> :                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    DEFAULT_TRANSITION;                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1455</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>if</span> (isSet($<span class='chip-variable'>args['linenumbers']</span>))                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>l</span> = $<span class='chip-variable'>args['linenumbers']</span>;                                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>showLineNumbers</span> = ($<span class='chip-variable'>l</span> == "<span class='chip-string'>1</span>");                                               
<span class="l">1460</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>else</span>                                                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>showLineNumbers</span> = DEFAULT_SHOW_LINE_NUMBERS;                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">1465</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>$<span class='chip-variable'>breadcrumbURLs</span>   = <span class='chip-keyword'>array</span>();                                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>$<span class='chip-variable'>breadcrumbTitles</span> = <span class='chip-keyword'>array</span>();                                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>$<span class='chip-variable'>i</span> = 0;                                                                         
<span class="l">1470</span>while (isSet($<span class='chip-variable'>args["bcURL$i"]</span>))                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>u</span> = $<span class='chip-variable'>args["bcURL$i"]</span>;                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>t</span> = isSet($<span class='chip-variable'>args["bcTitle$i"]</span>) ? $<span class='chip-variable'>args["bcTitle$i"]</span> : $<span class='chip-variable'>u</span>;                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1475</span>  <span class='chip-keyword'>if</span> ($<span class='chip-variable'>u[0]</span> != "<span class='chip-string'>/</span>")                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>u</span> = "<span class='chip-string'>/$u</span>";                                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1480</span>  $<span class='chip-variable'>breadcrumbURLs[$i]</span>   = $<span class='chip-variable'>u</span>;                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>breadcrumbTitles[$i]</span> = $<span class='chip-variable'>t</span>;                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  $<span class='chip-variable'>i++</span>;                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">1485</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>$<span class='chip-variable'>done</span> = <span class='chip-keyword'>false</span>;                                                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>foreach</span> ($<span class='chip-variable'>behaviourMap</span> <span class='chip-keyword'>as</span> $<span class='chip-variable'>ext</span> =&gt; $<span class='chip-variable'>lang</span>)                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">1490</span>  <span class='chip-keyword'>if</span> (endsWith($<span class='chip-variable'>filename</span>, $<span class='chip-variable'>ext</span>))                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>require</span> "<span class='chip-string'>chip-$lang.php</span>";                                                   
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    $<span class='chip-variable'>done</span> = <span class='chip-keyword'>true</span>;                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>break</span>;                                                                      
<span class="l">1495</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-keyword'>if</span> (!$<span class='chip-variable'>done</span>)                                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">1500</span>  header("<span class='chip-string'>HTTP/1.0 404 Not Found</span>");                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>echo</span> "<span class='chip-string'>No formatting module for '$path' found.\n</span>";                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>exit</span>;                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1505</span>$<span class='chip-variable'>url</span> = "<span class='chip-string'>$urlprefix$path</span>";                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>set_magic_quotes_runtime(<span class='chip-keyword'>false</span>);                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>@$<span class='chip-variable'>fd</span> = fopen("<span class='chip-string'>$url</span>", "<span class='chip-string'>rb</span>");                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1510</span><span class='chip-keyword'>if</span> ($<span class='chip-variable'>fd</span> === <span class='chip-keyword'>FALSE</span>)                                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>{                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  header("<span class='chip-string'>HTTP/1.0 404 Not Found</span>");                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>echo</span> "<span class='chip-string'>$url not found\n</span>";                                                      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>exit</span>;                                                                         
<span class="l">1515</span>}                                                                               
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>/* ** The Output ** */</span>                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1520</span>header("<span class='chip-string'>Content-type: text/html</span>");                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>?&gt;</span>                                                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-variable'>&lt;!DOCTYPE html PUBLIC                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>               "<span class='chip-string'>-//W3C//DTD XHTML 1.0 Strict//EN</span>"                               
<span class="l">1525</span>               "<span class='chip-string'>http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd</span>"&gt;</span>             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-variable'>&lt;html <span class='chip-keyword'>xmlns</span>="<span class='chip-string'>http://www.w3.org/1999/xhtml</span>" <span class='chip-keyword'>xml:lang</span>="<span class='chip-string'>en</span>" <span class='chip-keyword'>lang</span>="<span class='chip-string'>en</span>"&gt;</span>             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-variable'>&lt;head&gt;</span>                                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-variable'>&lt;title&gt;</span><span class='chip-normal'>&lt;?php <span class='chip-keyword'>echo</span> $<span class='chip-variable'>title</span>; ?&gt;</span><span class='chip-variable'>&lt;/title&gt;</span>                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-normal'>&lt;?php <span class='chip-keyword'>echo</span> transitionMeta(); ?&gt;</span>                                                 
<span class="l">1530</span><span class='chip-variable'>&lt;<span class='chip-keyword'>link</span> <span class='chip-keyword'>rel</span>="<span class='chip-string'>stylesheet</span>" <span class='chip-keyword'>href</span>="<span class='chip-string'>&lt;?php echo $dir; ?&gt;chip.css</span>" <span class='chip-keyword'>title</span>="<span class='chip-string'>CHIP</span>"          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-keyword'>type</span>="<span class='chip-string'>text/css</span>" /&gt;</span>                                                        
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>&lt;!--[if IE]&gt;                                                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>&lt;link href="&lt;?php echo $dir; ?&gt;chip-ie.css" rel="stylesheet" type="text/css"    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      media="screen"&gt;                                                           
<span class="l">1535</span>&lt;![endif]--&gt;</span>                                                                    
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-embedded-2'>&lt;script type="<span class='chip-string'>text/javascript</span>" src="<span class='chip-string'>&lt;?php echo $dir; ?&gt;rot13.js</span>"&gt;&lt;/script&gt;</span>      
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-embedded-2'>&lt;script type="<span class='chip-string'>text/javascript</span>" src="<span class='chip-string'>&lt;?php echo $dir; ?&gt;chip.js</span>"&gt;&lt;/script&gt;</span>       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-embedded-2'>&lt;script type="<span class='chip-string'>text/javascript</span>"&gt;                                                 
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>// &lt;!--                                                                         
<span class="l">1540</span></span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-normal'>&lt;?php                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>$<span class='chip-variable'>ppat</span> = plainPageAnchorText();                                                  
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1545</span><span class='chip-keyword'>echo</span> &lt;&lt;&lt;EOS                                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>chipFilePath = '<span class='chip-string'>$path</span>';                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>chipPlainPageAnchorText = '<span class='chip-string'>$ppat</span>';                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>chipEmailLabelPrefix = '<span class='chip-string'>$emailLabelPrefix</span>';                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>chipTopLinkLabel = '<span class='chip-string'>$topLinkLabel</span>';                                             
<span class="l">1550</span>chipBottomLinkLabel = '<span class='chip-string'>$bottomLinkLabel</span>';                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>EOS;                                                                            
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>?&gt;</span>                                                                              
<span class="l">1555</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  <span class='chip-keyword'>function</span> chipOnload()                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  {                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-normal'>&lt;?php                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    <span class='chip-keyword'>if</span> (DISABLE_JAVASCRIPT)                                                     
<span class="l">1560</span>    {                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>      <span class='chip-keyword'>echo</span> "<span class='chip-string'>return;\n</span>";                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    }                                                                           
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>?&gt;</span>                                                                              
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">1565</span>    chipFixRotEmails();                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>    chipFixLinks();                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>  }                                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span>                                                                                
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-comment'>// --&gt;                                                                          
<span class="l">1570</span></span>&lt;/script&gt;</span>                                                                       
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-variable'>&lt;/head&gt;</span>                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-variable'>&lt;body <span class='chip-keyword'>onload</span>="<span class='chip-string'>javascript:chipOnload()</span>"&gt;</span>                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-normal'>&lt;?php <span class='chip-keyword'>echo</span> pageHeader(); ?&gt;</span>                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-variable'>&lt;pre&gt;</span>                                                                           
<span class="l">1575</span><span class='chip-normal'>&lt;?php process(); ?&gt;</span>                                                             
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-variable'>&lt;/pre&gt;</span>                                                                          
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-normal'>&lt;?php <span class='chip-keyword'>echo</span> pageFooter(); ?&gt;</span>                                                     
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-variable'>&lt;/body&gt;</span>                                                                         
<span class="l">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='chip-variable'>&lt;/html&gt;</span>                                                                         
<span class="l">1580</span></span></pre>
<p style="text-align: center">&middot; chip.php ends &middot;</p>
<p class="chip-bottomlink"><span id='chip-bottomlink'>
To load this file without formatting, visit chip.php.  This is a spam-protection
measure; sorry for the inconvenience.
</span>
</p>
<p class="chip-attribution"><a href='http://www.ewanmellor.org.uk/chip.html'>Generated by CHIP: Code Highlighting in PHP, version X.Y.Z.</a></p>
</body>
</html>
